<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper 
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="shopMapper">
	
	<!--포인트 리절트맵  -->
	<resultMap type="Point" id="PointResultSet"> 
	
		<id property="pointNum" column="POINT_NUM"/>		
		<result property="userNo" column="USER_NO" />
		<result property="pointVal" column="POINT_VAL" />
		<result property="pointDate" column="POINT_DATE" />	
		<result property="pointType" column="POINT_TYPE" />
		
		
	</resultMap>
	
	
	<!-- 포인트 사용,적립 하는 쿼리 -->
	
	<insert id="insertPoint">
	
		INSERT INTO POINT VALUES
		(SEQ_POINT_NUM.NEXTVAL, #{userNo},#{pointVal},DEFAULT,#{pointType})
		
	</insert>
		
	
	
	<!-- My Point List : 내 포인트 내역 조회해오기 -->
	<select id="selectMyPoint" parameterType="Point" resultMap="PointResultSet">	
		 
	  SELECT *
	  FROM POINT
	  WHERE USER_NO=#{userNo}
	  ORDER BY POINT_NUM 
	  
	</select>
	
	
	<resultMap type="PointInfo" id="PointInfoResultSet"> 
			
		<id property="userNo" column="USER_NO"/>		
		<result property="totalPoint" column="TOTAL_POINT" />	
		
		
	</resultMap>
	
	
	
	<!-- My Point TOTAL : 토탈포인트 조회해오기 -->
	<select id="selectPointTotal" parameterType="PointInfo" resultMap="PointInfoResultSet">	
		 
	  SELECT *
	  FROM POINT_INFO
	  WHERE USER_NO=#{userNo}
	    
	</select>
	
	
	<!-- 리뷰 리절트 맵 -->
	
	<resultMap type="ProReview" id="ProReviewResultSet"> 
	
		<id property="reviewNo" column="REVIEW_NO"/>		
		<result property="reviewWriter" column="REVIEW_WRITER" />
		<result property="proCode" column="PRO_CODE" />
		<result property="reviewStar" column="REVIEW_STAR" />	
		<result property="reviewTitle" column="REVIEW_TITLE" />
		<result property="reviewContent" column="REVIEW_CONTENT" />
		<result property="originName" column="ORIGIN_NAME" />
		<result property="changeName" column="CHANGE_NAME" />
		<result property="reviewDate" column="REVIEW_DATE" />
		<result property="reviewCount" column="REVIEW_COUNT" />
		<result property="reviewStatus" column="REVIEW_STATUS" />
		<result property="refOderNo" column="REF_ONO" />
		
		<result property="userId" column="USER_ID" />
		<result property="proName" column="PRO_NAME" />
		
		
	</resultMap>
	
	
	
	<!-- 리뷰등록(사용자) -->	
	<insert id="insertReview">	
	
		INSERT INTO PRO_REVIEW
		VALUES(SEQ_REVIEW_NO.NEXTVAL, #{reviewWriter}, #{proCode},#{reviewStar},#{reviewTitle},#{reviewContent},#{originName},#{changeName}, DEFAULT, DEFAULT,DEFAULT, #{refOderNo})
  
  	</insert>
  	
	
	
	
	
	<!-- 등록된 my 리뷰 수 -->
	<select id = "myReviewListCount" resultType="_int">

	SELECT COUNT(*)
  	FROM PRO_REVIEW
  	WHERE REVIEW_STATUS='Y'
	AND REVIEW_WRITER=#{userNo}
  	
    
  	</select>

	<!-- 등록된 my리뷰List select해오기 -->
	<select id="selectMyReviewList" parameterType="ProReview" resultMap="ProReviewResultSet">	
	  
	  SELECT *
	  FROM PRO_REVIEW A
	  JOIN MEMBER B ON A.REVIEW_WRITER = B.USER_NO
	  JOIN PRODUCT C ON A.PRO_CODE = C.PRO_CODE  
	  WHERE A.REVIEW_STATUS='Y'
	  AND REVIEW_WRITER=#{userNo}
	    
	</select>
	
	
	<!-- 제품페이지에서 리뷰List 불러오기 -->
	<select id="selectProReviewList" parameterType="ProReview" resultMap="ProReviewResultSet">	
	  
	  SELECT *
	  FROM PRO_REVIEW	  
	  WHERE REVIEW_STATUS='Y'
	  AND PRO_CODE=#{proCode}
	    
	</select>
	
	
	<!-- 같은 제품을 사고 쓴 리뷰의 총 개수 조회하기 -->
	<select id = "proReviewListCount" resultType="_int">

	SELECT COUNT(*)
  	FROM PRO_REVIEW
  	WHERE REVIEW_STATUS='Y'
	AND PRO_CODE=#{proCode}
  	
    
  	</select>
	
	<!-- 리뷰갯수 체크 -->
	 <update id = "increaseCountReview" parameterType="_int">
    
	  UPDATE PRO_REVIEW
	  SET REVIEW_COUNT=REVIEW_COUNT+1
	  WHERE REVIEW_NO=#{reviewNo}
	  AND REVIEW_STATUS='Y'
  
  
  	</update>  
	
	<!-- 리뷰 불러오기 -1개? -->
	 <select id = "selectReview" parameterType="ProReview" resultMap="ProReviewResultSet">

	  SELECT *
	  FROM PRO_REVIEW A
	  JOIN MEMBER B ON A.REVIEW_WRITER = B.USER_NO
	  JOIN PRODUCT C ON A.PRO_CODE = C.PRO_CODE 	  	  
	  WHERE A.REVIEW_STATUS='Y'	  
	  AND A.REVIEW_NO=#{reviewNo}
    
  	</select>
  	
  	
    <!--리뷰 수정 -->
  	
  	<update id="updateReview" parameterType="ProReview">
  
  
	  UPDATE PRO_REVIEW
	  SET REVIEW_STAR=#{reviewStar}, REVIEW_TITLE=#{reviewTitle}, REVIEW_CONTENT=#{reviewContent}, ORIGIN_NAME=#{originName}, CHANGE_NAME=#{changeName}
	  WHERE REVIEW_NO=#{reviewNo}
	  
	  
	</update>
	
	
	
	<!--리뷰 삭제 -->	
  	<update id="deleteReview">
  
  		UPDATE PRO_REVIEW
  		SET REVIEW_STATUS='N'
  		WHERE REVIEW_NO=#{reviewNo}
    
  	</update>
  	
  	
  	
  	
  	
  	<!--  제품 리절트맵 -->
  	<resultMap type="Product" id="productResultSet"> 
		<id property="proCode" column="PRO_CODE"/>		
		<result property="cateCode" column="CATE_CODE" />
		<result property="proName" column="PRO_NAME" />
		<result property="price" column="PRICE" />	
		<result property="detailOri" column="DETAIL_ORI" />
		<result property="detailCha" column="DETAIL_CHA" />
		<result property="proAmount" column="PRO_AMOUNT" />
		<result property="proStatus" column="PRO_STATUS" />
		<result property="proContent" column="PRO_CONTENT" />
		
		<result property="reviewStar" column="REVIEW_STAR" />
		<result property="reviewTitle" column="REVIEW_TITLE" />
		<result property="reviewDate" column="REVIEW_DATE" />
		<result property="reviewCount" column="REVIEW_COUNT" />
		<result property="cateName" column="CATE_NAME" />
		
	</resultMap>
	
  	

	<!--판매중인 제품 select해오기 - 올 -->
	<select id="selectShopList" parameterType="Product" resultMap="productResultSet">	
		 
	  SELECT *
	  FROM PRODUCT
	  WHERE PRO_STATUS='Y'
	    
	</select>
	
	<!--등록된 product 수 (판매중인것) - 트리 -->
	<select id = "productTreeListCount" resultType="_int">
	
		SELECT COUNT(*)
	  	FROM PRODUCT
	  	WHERE PRO_STATUS='Y'
	  	AND CATE_CODE='tree'
    
  	</select>

	<!--판매중인 제품 select해오기 - 트리 -->
	<select id="selectShopTreeList" parameterType="Product" resultMap="productResultSet">	
		 
	  SELECT *
	  FROM PRODUCT
	  WHERE PRO_STATUS='Y'
	  AND CATE_CODE='tree'
	    
	</select>
	
	<!--등록된 product 수 (판매중인것) 식용 -->
	<select id = "productEdibleListCount" resultType="_int">

		SELECT COUNT(*)
	  	FROM PRODUCT
	  	WHERE PRO_STATUS='Y'
	    AND CATE_CODE='edible'
    
  	</select>

	<!--판매중인 제품 select해오기 식용 -->
	<select id="selectShopEdibleList" parameterType="Product" resultMap="productResultSet">	
		 
	  SELECT *
	  FROM PRODUCT
	  WHERE PRO_STATUS='Y'
	  AND CATE_CODE='edible'
	     
	</select>
	
	<!--등록된 product 수 (판매중인것) 꽃 -->
	<select id = "productFlowerListCount" resultType="_int">

		SELECT COUNT(*)
	  	FROM PRODUCT
	  	WHERE PRO_STATUS='Y'
	    AND CATE_CODE='flower'
  	</select>

	<!--판매중인 제품 select해오기 꽃 -->
	<select id="selectShopFlowerList" parameterType="Product" resultMap="productResultSet">	
		 
	  SELECT *
	  FROM PRODUCT
	  WHERE PRO_STATUS='Y'
	  AND CATE_CODE='flower'
	    
	</select>
	
	<!--등록된 product 수 (판매중인것) 기타 -->
	<select id = "productEctListCount" resultType="_int">

		SELECT COUNT(*)
	  	FROM PRODUCT
	  	WHERE PRO_STATUS='Y'
	    AND CATE_CODE='ect'
	    
  	</select>

	<!--판매중인 제품 select해오기 기타 -->
	<select id="selectShopEctList" parameterType="Product" resultMap="productResultSet">	
		 
	  SELECT *
	  FROM PRODUCT
	  WHERE PRO_STATUS='Y'
	  AND CATE_CODE='ect'
	    
	</select>
	
	<!-- 카트 리절트맵 -->
	<resultMap type="Cart" id="cartResultSet"> 
		<id property="cartNo" column="CART_NO"/>
		<result property="userNo" column="USER_NO" />
		<result property="proCode" column="PRO_CODE" />
		<result property="amount" column="AMOUNT" />
		
		
				
		<result property="cateCode" column="CATE_CODE" />
		<result property="proName" column="PRO_NAME" />
		<result property="price" column="PRICE" />	
		<result property="detailOri" column="DETAIL_ORI" />
		<result property="detailCha" column="DETAIL_CHA" />
		<result property="proAmount" column="PRO_AMOUNT" />
		<result property="proStatus" column="PRO_STATUS" />
		<result property="proContent" column="PRO_CONTENT" />
		
	</resultMap>
	
	
	<!--  cart select해오기 -->
	<select id = "selectCartList" parameterType="Cart" resultMap="cartResultSet">

	  SELECT *
	  FROM CART A	  
	  JOIN PRODUCT B ON A.PRO_CODE = B.PRO_CODE 	  	  
	  WHERE A.USER_NO=#{userNo}
    
  	</select>

	
	<!-- cart 삭제 -->
	
    <delete id="deleteCart">  
  		
  		DELETE FROM CART WHERE CART_NO=#{cartNo}
    
  	</delete>
  	

	<!-- 주문 리절트맵 -->
	<resultMap type="ProOrder" id="ProOrderResultSet"> 
	
		<id property="orderNo" column="ORDER_NO"/>		
		<result property="cartNo" column="CART_NO" />
		<result property="proCode" column="PRO_CODE" />
		<result property="freeNo" column="FREE_NO" />	
		<result property="userNo" column="USER_NO" />
		<result property="payCode" column="PAY_CODE" />
		<result property="amount" column="AMOUNT" />
		<result property="orderName" column="ORDER_NAME" />
		<result property="orderPhone" column="ORDER_PHONE" />
		<result property="address" column="ADDRESS" />
		<result property="addressDetail" column="ADDRESS_DETAIL" />
		<result property="orderStatus" column="ORDER_STATUS" />
		<result property="orderDate" column="ORDER_DATE" />
		<result property="orderRInsert" column="ORDER_R_INSERT" />
		
		<result property="proName" column="PRO_NAME" />
		<result property="freeName" column="FREE_NAME" />
		<result property="userId" column="USER_ID" />
		
		
	</resultMap>
	
	
	<!-- 오더넘버로 제품 코트 select해오기 -->
	<select id="selectProductCode" resultType="string">	
		 
	  SELECT PRO_CODE
	  FROM PRO_ORDER
	  WHERE ORDER_NO=#{orderNo}
	    
	</select>
	
	
		
	<!--  내 주문 select해오기 -->
	<select id = "selectOrderList" parameterType="ProOrder" resultMap="ProOrderResultSet">

	  SELECT  A.*, B.PRO_NAME
	  FROM PRO_ORDER A	  
	  JOIN PRODUCT B ON A.PRO_CODE = B.PRO_CODE 	  	  
	  WHERE A.USER_NO=#{userNo}
	  AND A.ORDER_STATUS IN('C','Y','R')
    
  	</select>
  	
  	
  	<!--  내 취소 주문 select해오기 -->
	<select id = "selectOrderCancelList" parameterType="ProOrder" resultMap="ProOrderResultSet">

	  SELECT  A.*, B.PRO_NAME
	  FROM PRO_ORDER A	  
	  JOIN PRODUCT B ON A.PRO_CODE = B.PRO_CODE 	  	  
	  WHERE A.USER_NO=#{userNo}
	  AND A.ORDER_STATUS = 'N'
    
  	</select>
  	
  	
	<!--  내 주문 디테일 페이지 -->
	<select id = "selectOrder" parameterType="ProOrder" resultMap="ProOrderResultSet">

	  SELECT A.*, B.PRO_NAME, C.USER_ID, D.FREE_NAME
	  FROM PRO_ORDER A	  
	  JOIN PRODUCT B ON A.PRO_CODE = B.PRO_CODE	  
	  JOIN MEMBER C ON A.USER_NO = C.USER_NO
	  JOIN FREEBIE D ON A.FREE_NO = D.FREE_NO	  	  
	  WHERE A.ORDER_NO=#{orderNo}
    
  	</select>
	
	<!-- 주문등록(사용자) -->	
	<insert id="insertOrder">	
	
		INSERT INTO PRO_ORDER
		VALUES(SEQ_ORDER_NO.NEXTVAL, null, #{proCode}, #{freeNo}, #{userNo}, #{payCode}, #{amount}, #{orderName}, #{orderPhone}, #{address}, #{addressDetail}, DEFAULT, DEFAULT,DEFAULT)
  
  	</insert>
	
	
	
	<!-- 카트에 인서트하기 -->
	<insert id="insertCart">
	
		INSERT INTO CART VALUES
		(SEQ_CART_NO.NEXTVAL, #{userNo},#{proCode},#{amount})
		
	</insert>
	
	
	<!--관리자에게 주문 취소 요청하기 -->	
  	<update id="cancelRequestOrder">
  
  		UPDATE PRO_ORDER
  		SET ORDER_STATUS='R'
  		WHERE ORDER_NO=#{orderNo}
    
  	</update>
  	
  	
  	<!--주문 최종 확정하기 -->	
  	<update id="OkOrder">
  
  		UPDATE PRO_ORDER
  		SET ORDER_STATUS='C'
  		WHERE ORDER_NO=#{orderNo}
    
  	</update>
  	
  	
   	<!--오더테이블에 리뷰작성여부 Y로 업데이트하기 -->	
  	<update id="updateOTableReviewOk">
  
  		UPDATE PRO_ORDER
  		SET ORDER_R_INSERT='Y'
  		WHERE ORDER_NO=#{orderNo}
    
  	</update>
  	
	<!--숍 디테일페이지 조회 -->	
  	<select id = "selectShop" parameterType="Product" resultMap="productResultSet">

	  SELECT A.*, B.CATE_NAME
	  FROM PRODUCT A	 
	  JOIN PRO_CATEGORY B ON A.CATE_CODE = B.CATE_CODE	  	  
	  WHERE PRO_CODE=#{proCode}
    
 	</select>
 	
 	
 	<!-- 사은품 리절트맵 -->
	
	<resultMap type="Freebie" id="freebieResultSet"> 
		<id property="freeNo" column="FREE_NO"/>		
		<result property="freeName" column="FREE_NAME" />
		<result property="originName" column="ORIGIN_NAME" />
		<result property="changeName" column="CHANGE_NAME" />	
		<result property="freePoint" column="FREE_POINT" />
		<result property="freeAmount" column="FREE_AMOUNT" />		
		
	</resultMap>
	
	
	<!--등록된 사은품중에 사용자가 살 수 있는 재고있는 사은품 select해오기 -->
	<select id="selectFreebieUserList" parameterType="Freebie" resultMap="freebieResultSet">	
		 
	  SELECT *
	  FROM FREEBIE
	  WHERE FREE_AMOUNT > 0
	    
	</select>
	
	
	<!-- 사은품 조회해오기(1개) -->	
  	<select id = "selectFreebie" parameterType="Freebie" resultMap="freebieResultSet">

	  SELECT *
	  FROM FREEBIE 	  	  
	  WHERE FREE_NO=#{freeNo}
    
 	</select>
	
	<!--사은품 구매 시 재고 수정 -->
	<update id="buyFreebie">
	
	  UPDATE FREEBIE
	  SET FREE_AMOUNT=FREE_AMOUNT-1
	  WHERE FREE_NO=#{freeNo}
	  
	</update>
	
	<select id="selectBestSeller" resultMap="productResultSet">
	
		<![CDATA[
		SELECT PRO_CODE, PRO_NAME, PRICE, DETAIL_CHA
		FROM PRODUCT
		WHERE PRO_CODE IN (SELECT A.PRO_CODE
		                    FROM (SELECT PRO_CODE, COUNT(PRO_CODE) COUNT
		                            FROM PRO_ORDER
		                            GROUP BY PRO_CODE
		                            ORDER BY COUNT DESC) A
		                    WHERE ROWNUM <= 2)
		]]>
	
	</select>
	
 	
   <!-- 리뷰 [도움됐어요] 테이블 리절트맵 -->
	
	<resultMap type="ReviewLike" id="ReviewLikeResultSet"> 
		
		<id property="likeNo" column="LIKE_NO"/>		
		<result property="reviewNo" column="REVIEW_NO" />
		<result property="userNo" column="USER_NO" />
		<result property="likeStatus" column="LIKE_STATUS" />	
	
	</resultMap>
 	
 	<!-- select하기 로그인된 회원의 도움됐어요눌렀는지 여부 --> 	
 	<select id="selectLike" parameterType="ReviewLike" resultMap="ReviewLikeResultSet">
 	
 	  SELECT *
	  FROM REVIEW_LIKE
	  WHERE USER_NO=#{userNo}
	  AND REVIEW_NO=#{reviewNo}	 
 	
 	</select>
 	
 	<!-- 해당회원이 도움됐어요 했는지 찾아보기(검증) 두번누르면 안돼 -->
	<select id="findLike" parameterType="ReviewLike" resultMap="ReviewLikeResultSet">
	
	  SELECT *
	  FROM REVIEW_LIKE
	  WHERE USER_NO=#{userNo}
	  AND REVIEW_NO=#{reviewNo}
		
	</select>

	<!--도움됐어요 안누른 상태에선 도움됐어요 insert -->
	<insert id="insertLike">
	
		INSERT INTO REVIEW_LIKE VALUES
		(SEQ_REVIEW_LIKE_NO.NEXTVAL, #{reviewNo},#{userNo},1)		
		
	</insert>

	<!-- 도움됐어요 누른상태인데 또 누르면 데이터 삭제됨 !(도움됐어요 취소)-->
	<delete id="deleteHeart">
		DELETE
		FROM REVIEW_LIKE
		WHERE USER_NO=#{userNo}
		AND REVIEW_NO=#{reviewNo}	
	</delete>
 	
 	
 	<!-- 도움됐어요 갯수 카운팅 --> 	
	<select id ="likeCount" resultType="_int">

		SELECT COUNT(*)
	  	FROM REVIEW_LIKE
	  	WHERE REVIEW_NO=#{reviewNo}
   
    
  	</select>
  	
  	
  	<!-- 검색하는 sql:서치키워드 있을때 LIKE해서 같은거 찾아오기 -->
  	<sql id="productNameWhere" >				
				
		<if test="searchKeyword != null and searchKeyword != ''">
			<![CDATA[			
			AND PRO_NAME LIKE '%'||#{searchKeyword}||'%'			
			]]>	
		</if>
		
	</sql>
	
	<!-- 서치List불러오기 -->
	<select id="searchShopList" parameterType="Product" resultMap="productResultSet" >
		
		<![CDATA[			
			SELECT *
			FROM PRODUCT		
			WHERE 1=1
		]]>
		<include refid="productNameWhere"/>		
		
	</select>
	
	  	
	<!--등록된 product 수 (판매중인것) - 모든 제품인데 서치키워드 있을때만 조건 주기! -->
	<select id = "productListCount" resultType="_int">

		SELECT COUNT(*)
	  	FROM PRODUCT
	  	WHERE 1=1
	  	AND PRO_STATUS='Y'	  	 
		<include refid="productNameWhere"/>
    	
    	
  	</select>
  	
  	<!-- 싼가격순 -->
	<select id="sortPriceList" parameterType="Product" resultMap="productResultSet" >
	
      SELECT *
	  FROM PRODUCT
	  WHERE PRO_STATUS='Y'
      ORDER BY PRICE
      
	</select>
	
	
	<!--제품명 ㄱㄴㄷ  -->
	<select id="sortNameList" parameterType="Product" resultMap="productResultSet" >
	
	  SELECT *
	  FROM PRODUCT
	  WHERE PRO_STATUS='Y'
      ORDER BY PRO_NAME
		
	</select>
	
	<!-- 비싼가격순 -->
	<select id="sortPriceListDesc" parameterType="Product" resultMap="productResultSet" >
	
      SELECT *
	  FROM PRODUCT
	  WHERE PRO_STATUS='Y'
      ORDER BY PRICE DESC
		
	</select>
	
	<!-- 제품명역순  -->
	<select id="sortNameListDesc" parameterType="Product" resultMap="productResultSet" >
	
      SELECT *
	  FROM PRODUCT
	  WHERE PRO_STATUS='Y'
      ORDER BY PRO_NAME DESC
		
	</select>
 	
</mapper>
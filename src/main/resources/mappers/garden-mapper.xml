<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper 
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd" >

<mapper namespace="gardenMapper">

	<resultMap type="com.uni.spring.garden.model.dto.VisitorBoard" id="VBoardResultSet"> 
		<id property="boardNo" column="BOARD_NO"/>
		<result property="writer" column="USER_ID" />		
		<result property="hostUser" column="HOST_USER" />
		<result property="content" column="CONTENT" />
		<result property="enrollDate" column="ENROLL_DATE" />	
		<result property="status" column="STATUS" />
	</resultMap>

	
	<select id="getBoardList" parameterType="string" resultMap="VBoardResultSet">
		
		<![CDATA[
		SELECT *
		FROM (
			SELECT A.BOARD_NO, B.USER_ID, A.HOST_USER, A.CONTENT, A.ENROLL_DATE, A.STATUS
			FROM VISITOR_BOARD A
			JOIN MEMBER B ON A.WRITER = B.USER_NO
			WHERE A.HOST_USER = (SELECT USER_NO FROM MEMBER WHERE USER_ID = #{hostUser})
			AND A.STATUS='Y'
			ORDER BY A.BOARD_NO DESC)
		WHERE ROWNUM <= 3
		]]>
	
	</select>
	
	<select id="selectListCount" resultType="_int">
	
		SELECT COUNT(*)
		FROM VISITOR_BOARD
		WHERE HOST_USER = (SELECT USER_NO FROM MEMBER WHERE USER_ID = #{hostUser})
		AND STATUS = 'Y'
	
	</select>
	
	<select id="getBoardListAll" resultMap="VBoardResultSet">
	
		SELECT *
		FROM (
			SELECT A.BOARD_NO, B.USER_ID, A.HOST_USER, A.CONTENT, A.ENROLL_DATE, A.STATUS
			FROM VISITOR_BOARD A
			JOIN MEMBER B ON A.WRITER = B.USER_NO
			WHERE A.HOST_USER = (SELECT USER_NO FROM MEMBER WHERE USER_ID = #{hostUser})
			AND A.STATUS='Y'
			ORDER BY A.BOARD_NO DESC)
	
	</select>
	
	<insert id="insertBoard">
	
		INSERT INTO VISITOR_BOARD VALUES
		(SEQ_V_BOARD_NO.NEXTVAL, #{writer}, (SELECT USER_NO FROM MEMBER WHERE USER_ID = #{hostUser}), #{content}, DEFAULT, DEFAULT)
		
	</insert>
	
	<update id="deleteBoard">
	
		UPDATE VISITOR_BOARD
		SET STATUS = 'N'
		WHERE BOARD_NO = #{boardNo}
		
	</update>
	
	<update id="updateBoard">
	
		UPDATE VISITOR_BOARD
		SET CONTENT = #{content}
		WHERE BOARD_NO = #{boardNo}
		
	</update>
	
	<!-- 방명록 댓글 -->
	
	<resultMap type="VComment" id="VCommentResultSet"> 
		<id property="commentNo" column="COMMENT_NO"/>
		<result property="boardNo" column="BOARD_NO"/>
		<result property="userNo" column="USER_ID" />		
		<result property="comment" column="COMMENT" />
		<result property="enrollDate" column="ENROLL_DATE" />	
		<result property="status" column="STATUS" />
	</resultMap>

	<!-- 댓글 -->
	
	<insert id="insertComment">
	
		INSERT INTO VISITOR_COMMENT VALUES
		(SEQ_V_COMMENT_NO.NEXTVAL, #{boardNo}, #{userNo}, #{content}, DEFAULT, DEFAULT)

	</insert>
	
	<select id="selectCommentCount" resultType="_int">
	
		SELECT COUNT(*)
	    FROM VISITOR_COMMENT A
	    JOIN MEMBER B ON A.USER_NO = B.USER_NO
	    JOIN VISITOR_BOARD C ON A.BOARD_NO = C.BOARD_NO
	    WHERE C.HOST_USER = (SELECT USER_NO FROM MEMBER WHERE USER_ID = #{hostUser})
	    AND A.STATUS='Y'
	
	</select>
	
	<select id="selectCommentList" resultMap="VCommentResultSet">
		    
		SELECT A.COMMENT_NO, A.BOARD_NO, B.USER_ID, A.CONTENT, A.ENROLL_DATE, A.STATUS
	    FROM VISITOR_COMMENT A
	    JOIN MEMBER B ON A.USER_NO = B.USER_NO
	    JOIN VISITOR_BOARD C ON A.BOARD_NO = C.BOARD_NO
	    WHERE C.HOST_USER = (SELECT USER_NO FROM MEMBER WHERE USER_ID = #{hostUser})
	    AND A.STATUS='Y'
	    ORDER BY A.BOARD_NO DESC, A.ENROLL_DATE DESC   
	
	</select>
	
	<update id="updateComment">
	
		UPDATE VISITOR_COMMENT
		SET CONTENT = #{content}, ENROLL_DATE = SYSDATE
		WHERE COMMENT_NO = #{commentNo}
		
	</update>
	
	<update id="deleteComment">
	
		UPDATE VISITOR_COMMENT
		SET STATUS = 'N'
		WHERE COMMENT_NO = #{commentNo}
		
	</update>
	
	
	
	<!-- 이웃관리 -->
	
	<resultMap type="Neighbor" id="NeighborResultSet"> 
		<id property="neighborNo" column="NEIGHBOR_NO"/>
		<result property="userNo" column="USER_NO" />		
		<result property="nUserNo" column="USER_ID" />
		<result property="enrollDate" column="ENROLL_DATE" />	
		<result property="status" column="STATUS" />
	</resultMap>
	
	<select id="getNeighborList" resultMap="NeighborResultSet">
	
		SELECT A.NEIGHBOR_NO, B.USER_ID, A.ENROLL_DATE, A.STATUS
		FROM NEIGHBOR A
		JOIN MEMBER B ON A.N_USER_NO = B.USER_NO
		WHERE A.USER_NO = #{userNo}
		AND A.STATUS = 'Y'
		ORDER BY A.ENROLL_DATE DESC
	
	</select>
	
	<update id="deleteNeighbor">
	
		UPDATE NEIGHBOR
		SET STATUS = 'N'
		WHERE NEIGHBOR_NO = #{neighborNo}
		
	</update>
	
	<insert id="insertNeighbor">
	
		INSERT INTO NEIGHBOR VALUES
		(SEQ_NEIGHBOR_NO.NEXTVAL, #{userNo}, (SELECT USER_NO FROM MEMBER WHERE USER_ID = #{nUserId}), DEFAULT, DEFAULT)
	
	</insert>
	
	<!-- 관리자 기능. 식물정보등록 관리자 페이지 -->
	<resultMap type="PlantInfo" id="PlantInfoResultSet"> 
		<id property="regNo" column="REG_NO"/>
		<result property="category" column="PREFER_PLANTS" />		
		<result property="plantName" column="PLANT_NAME" />	
		<result property="water" column="WATER" />	
		<result property="sun" column="SUN" />	
		<result property="status" column="STATUS" />	
	</resultMap>
	
	
	<select id="selectPlantListCount" resultType="_int">
	
		SELECT COUNT(*)
		FROM PLANT_INFO
		WHERE 1=1
		<if test="search != null">
		AND PLANT_NAME LIKE '%' || #{search} || '%'
		</if>
		
	</select>
	
	<select id="selectPlantList" resultMap="PlantInfoResultSet">
		
		SELECT A.REG_NO, B.PREFER_PLANTS, A.PLANT_NAME, A.WATER, A.SUN, A.STATUS
		FROM PLANT_INFO A
		JOIN PREFERENCE B ON A.CATEGORY = B.PREFER_CODE
		WHERE 1=1
		<if test="search != null">
		AND PLANT_NAME LIKE '%' || #{search} || '%'
		</if>
		ORDER BY REG_NO
	
	</select>
	
	<insert id="insertPlant">
	
		INSERT INTO PLANT_INFO VALUES
		(SEQ_REG_NO.NEXTVAL, #{category}, #{plantName}, #{water}, #{sun}, DEFAULT)
	
	</insert>
	
	<delete id="deletePlant">
	
		DELETE FROM PLANT_INFO
		WHERE REG_NO = #{regNo}
		
	</delete>
	
	<select id="selectPlantInfo" resultMap="PlantInfoResultSet">
		
		SELECT A.REG_NO, B.PREFER_PLANTS, A.PLANT_NAME, A.WATER, A.SUN, A.STATUS
		FROM PLANT_INFO A
		JOIN PREFERENCE B ON A.CATEGORY = B.PREFER_CODE
        WHERE REG_NO = #{regNo}
	
	</select>
	
	<update id="updatePlantInfo">
	
		UPDATE PLANT_INFO
		SET CATEGORY = #{category},
			PLANT_NAME = #{plantName},
			WATER = #{water},
			SUN = #{sun},
			STATUS = #{status}
		WHERE REG_NO = #{regNo}
		
	</update>
	
	<!-- 데일리로그 -->
	<resultMap type="DailyLog" id="DailyLogResultSet"> 
		<id property="logNo" column="LOG_NO"/>
		<result property="userNo" column="USER_ID" />		
		<result property="fileName" column="FILE_ORIGIN_NAME" />	
		<result property="serverName" column="FILE_SERVER_NAME" />	
		<result property="content" column="CONTENT" />	
		<result property="enrollDate" column="ENROLL_DATE" />	
		<result property="status" column="STATUS" />	
	</resultMap>
	
	<select id="selectLogCount" resultType="_int">
	
		SELECT COUNT(*)
		FROM DAILYLOG
		WHERE 1=1
		AND USER_NO = (SELECT USER_NO FROM MEMBER WHERE USER_ID = #{hostUser})
		AND STATUS = 'Y'
	
	</select>
	
	<select id="selectLogList" resultMap="DailyLogResultSet">
		
		SELECT A.LOG_NO, B.USER_ID, A.FILE_ORIGIN_NAME, A.FILE_SERVER_NAME, A.CONTENT, A.ENROLL_DATE, A.STATUS
        FROM DAILYLOG A
        JOIN MEMBER B USING(USER_NO)
        WHERE B.USER_ID = #{hostUser}
        AND A.STATUS = 'Y'
        
	</select>
	
	<select id="selectLog" resultMap="DailyLogResultSet">
		
		SELECT A.LOG_NO, B.USER_ID, A.FILE_ORIGIN_NAME, A.FILE_SERVER_NAME, A.CONTENT, A.ENROLL_DATE, A.STATUS
        FROM DAILYLOG A
        JOIN MEMBER B USING(USER_NO)
        WHERE LOG_NO = #{logNo}
        
	</select>
	
	<insert id="insertDailyLog">
		
		INSERT INTO DAILYLOG VALUES
		(SEQ_LOG_NO.NEXTVAL, #{userNo}, #{fileName}, #{serverName}, #{content}, DEFAULT, DEFAULT)
		
	</insert>
	
	<update id="updateDailylog">
	
		UPDATE DAILYLOG
		SET CONTENT = #{content},
			FILE_ORIGIN_NAME = #{fileName},
			FILE_SERVER_NAME = #{serverName}
		WHERE LOG_NO = #{logNo}
		
	</update>
	
	<delete id="deleteDailyLog">
	
		UPDATE DAILYLOG
		SET STATUS = 'N'
		WHERE LOG_NO = #{logNo}
		 
	</delete>
	
	<!-- 데일리로그 댓글 -->
	<resultMap type="LogComment" id="LogCommentResultSet"> 
		<id property="commentNo" column="COMMENT_NO"/>
		<result property="logNo" column="LOG_NO"/>
		<result property="userNo" column="USER_ID" />		
		<result property="comment" column="COMMENT" />
		<result property="enrollDate" column="ENROLL_DATE" />	
		<result property="status" column="STATUS" />	
	</resultMap>
	
	<select id="selectLogCommentCount" resultType="_int">
	
		SELECT COUNT(*)
		FROM LOG_COMMENT
		WHERE LOG_NO = #{logNo}
		AND STATUS = 'Y'
	
	</select>
	
	<select id="selectLogCommentList" resultMap="LogCommentResultSet">
	
		SELECT A.COMMENT_NO, A.LOG_NO, B.USER_ID, A.CONTENT, A.ENROLL_DATE, A.STATUS
		FROM LOG_COMMENT A
		JOIN MEMBER B USING (USER_NO)
		WHERE LOG_NO = #{logNo}
		AND A.STATUS = 'Y'
		
	</select>
	
</mapper>